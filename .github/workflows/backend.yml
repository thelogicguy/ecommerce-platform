name: Backend CI/CD Pipeline

on:
  push:
    branches:
      - main

jobs:
  backend-build:
    runs-on: ubuntu-latest

    steps:
      # Step 1: Checkout the code from the repository
      - name: Checkout Code
        uses: actions/checkout@v3

      # Step 2: Cache Node.js dependencies for faster builds
      - name: Cache dependencies
        uses: actions/cache@v3
        with:
          path: node_modules
          key: ${{ runner.os }}-node-${{ hashFiles('**/package-lock.json') }}
          restore-keys: |
            ${{ runner.os }}-node-

      # Step 3: Set up Node.js environment
      - name: Set up Node.js
        uses: actions/setup-node@v3
        with:
          node-version: '16'  # Ensure this matches your project's Node.js version

      # Step 4: Install dependencies
      - name: Install Dependencies
        run: |
          npm ci # Run clean install to match package-lock.json
          working-directory: ./api

      # Step 5: Run tests (using Jest or your preferred testing framework)
      - name: Run Tests
        run: npm run test
        working-directory: ./api

      # Step 6: Lint code using ESLint
      - name: Lint Code
        run: npm run lint
        working-directory: ./api

      # Step 7: Build Docker image
      - name: Build Docker Image
        run: |
          docker build -t ecommerce-backend ./api
          docker tag ecommerce-backend:latest thelogicguy/ecommerce-backend:latest

      # Step 8: Push Docker image to Docker Hub
      - name: Push Docker Image to Docker Hub
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKER_HUB_USERNAME }}
          password: ${{ secrets.DOCKER_HUB_ACCESS_TOKEN }}
      - run: docker push thelogicguy/ecommerce-backend:latest

      # Step 9: Deploy to AWS EC2 (if necessary)
      - name: Deploy to AWS EC2
        uses: appleboy/ssh-action@v0.1.7
        with:
          host: ${{ secrets.AWS_EC2_PUBLIC_IP }}
          username: ubuntu
          key: ${{ secrets.AWS_EC2_SSH_KEY }}
          script: |
            docker pull thelogicguy/ecommerce-backend:latest
            docker stop ecommerce-backend || true
            docker rm ecommerce-backend || true
            docker run -d --name ecommerce-backend -p 5000:5000 thelogicguy/ecommerce-backend:latest

